USERS 

    // @desc    Register new user
    // @route   POST /users
    // @access  Public
    // @data    { name, lastName, age, email, password,phone, profile }

    // @desc    Authenticate a user
    // @route   POST /users/login 
    // @access  Public
    // @data    { email, password }

    // @desc    Get user data
    // @route   GET /users/me (Authorization = 'Bearer '+token)
    // @access  Private

     // @desc    Get user by id
    // @route   GET /users/:userId
    // @access  Public

    // @desc    verify if user exist
    // @route   GET /users/isUser
    // @access  public
    

    // @desc    upload profile image (file key:  profile)
    // @route   POST /users/profile 
    // @access  Private(only user can upload your image profile)
    // @data    { file: file(image) }

    // @desc    get profile image (url)
    // @route   GET /users//:userId/profile 
    // @access  Public

    // @desc    update user Data
    // @route   PUT /users/updateData
    // @access  Private 
    // @data    { name, lastName, phone, email }

    // @desc    update user password
    // @route   PUT /users/updatePassword
    // @access  Private 
    // @data     { oldPassword, newPassword }

    // @desc    remove profile image
    // @route   PUT /users/removeProfile
    // @access  Private


    // @desc    Send friend request
    // @route   POST /users/sendFriendRequest/:friendId
    // @access  Private

    // @desc    Get user's friends
    // @route   GET /users/friends
    // @access  Private

    // @desc    Get friend requests
    // @route   GET /users/friendRequests
    // @access  Private

    // @desc    Get friend suggestions
    // @route   GET /users/friendSuggestions
    // @access  Private

    // @desc    Accept friend request
    // @route   PUT /users/acceptFriendRequest/:requestId
    // @access  Private

    // @desc    Reject friend request
    // @route   PUT /users/rejectFriendRequest/:requestId
    // @access  Private


POSTS

    // @desc    create new post
    // @route   POST /users/posts
    // @access  Private
    // @data    { contentType, contentText, contentUrl(url :optional), contentFiles( image(s):optional) }

    // @desc    get all user posts
    // @route   GET /users/posts
    // @access  public

    // @desc    get post by id
    // @route   GET /users/posts/:postId
    // @access  Public

    // @desc    delete post
    // @route   DELETE /users/posts/:postId
    // @access  Private (only creator of pub can deleted)

    // @desc    Share post
    // @route   POST /users/posts/:postId/shares
    // @access  Private
    // @data    {} without data

    // @desc    add reaction to a post
    // @route   PUT /users/posts/:postId/addReaction
    // @access  Private
    // @data    { type }

    // @desc    remove reaction to a comment
    // @route   PUT users/posts/:postId/removeReaction
    // @access  Private


COMMENTS

    // @desc    create new comment
    // @route   POST /users/posts/:postId/comments
    // @access  Private
    // @data    {content}


    // @desc    get all comments for the post
    // @route   GET users/posts/:postId/comments
    // @access  private(only Authenticated user can get)

    // @desc    delete comment
    // @route   DELETE /users/posts/:postId/comments/:commentId
    // @access  Private (only creator of comment or owner of the post can delete a comment)

    // @desc    add reaction to a comment
    // @route   PUT /users/posts/:postId/comments/:commentId/addReaction
    // @access  Private
    // @data    { type }

    // @desc    remove reaction to a comment
    // @route   PUT users/posts/:postId/comments/:commentId/removeReaction
    // @access  Private



CONVERSATION:

    // @desc    add new conversation
    // @route   POST /conversations/addConversation
    // @access  current user
    // @data    { participants(array) }
  
    // @desc    delete conversation (and  all messages)
    // @route   DELETE /conversations/:conversationId
    // @access  user creator of conversation

    // @desc    remove participant to conversation
    // @route   PUT /conversations/:conversationId/removeParticipant
    // @access  user  if participant and  not the  creator
    // @data    

    // @desc    add participant to conversation
    // @route   PUT /conversations/:conversationId/addParticipant
    // @access  current user  if a participant and  not the  creator of conversation
    // @data    { newMemberId }

MESSAGES

    // @desc    send new message
    // @route   POST /conversations/:conversationId/message/send
    // @access  participant in conversation
    // @data    {type,content,file( optionnal:(formData & 'Content-Type': 'multipart/form-data' ) )}

    // @desc    Update message 
    // @route   PUT /conversations/:conversationId/message/:messageId
    // @access  public 
    // @data    { seenBy(optional), deletedFor(optional), status(optional) }
